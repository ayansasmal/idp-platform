apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: backstage-app-build
  title: Build Backstage Application
  description: Build and push a Backstage application using Argo Workflows
  tags:
    - backstage
    - nodejs
    - ci-cd
    - argo-workflows
spec:
  owner: platform-team
  type: workflow
  parameters:
    - title: Backstage Application Information
      required:
        - name
        - repoUrl
      properties:
        name:
          title: Application Name
          type: string
          description: Name of the Backstage application
          pattern: '^[a-z0-9-]+$'
          maxLength: 50
          default: backstage-app
        description:
          title: Description
          type: string
          description: Brief description of the Backstage application
        repoUrl:
          title: Repository URL
          type: string
          description: Git repository URL containing Backstage source code
        branch:
          title: Branch/Tag
          type: string
          description: Git branch or tag to build from
          default: main

    - title: Build Configuration
      properties:
        dockerfile:
          title: Dockerfile
          type: string
          description: Dockerfile to use for building
          default: Dockerfile.prebuilt
          enum:
            - Dockerfile.prebuilt
            - Dockerfile.multistage
            - Dockerfile.simple
        imageTag:
          title: Image Tag
          type: string
          description: Docker image tag
          default: latest
          pattern: '^[a-zA-Z0-9._-]+$'
        nodeVersion:
          title: Node.js Version
          type: string
          description: Node.js version for building
          default: "20"
          enum:
            - "18"
            - "20"
            - "21"
        
    - title: Deployment Configuration
      properties:
        environment:
          title: Target Environment
          type: string
          description: Target deployment environment
          default: development
          enum:
            - development
            - staging
            - production
        autoSync:
          title: Auto Sync with ArgoCD
          type: boolean
          description: Automatically sync deployment after successful build
          default: true

  steps:
    - id: trigger-build-workflow
      name: Trigger Backstage Build Workflow
      action: argo-workflows:create
      input:
        namespace: argo-workflows
        workflowName: backstage-build-${{ parameters.name }}-${{ '' | now | date('YYYYMMDDHHmmss') }}
        workflowTemplate: backstage-app-build
        parameters:
          repo-url: ${{ parameters.repoUrl }}
          revision: ${{ parameters.branch }}
          app-name: ${{ parameters.name }}
          image-tag: ${{ parameters.imageTag }}
          dockerfile: ${{ parameters.dockerfile }}
          ecr-registry: 000000000000.dkr.ecr.us-east-1.localhost.localstack.cloud:4566

    - id: update-deployment
      name: Update Deployment Manifest
      if: ${{ parameters.autoSync }}
      action: roadiehq:utils:fs:write
      input:
        path: deployment-manifest.yaml
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: ${{ parameters.name }}
            namespace: backstage
            labels:
              app.kubernetes.io/name: ${{ parameters.name }}
          spec:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/name: ${{ parameters.name }}
            template:
              metadata:
                labels:
                  app.kubernetes.io/name: ${{ parameters.name }}
              spec:
                serviceAccountName: backstage
                containers:
                - name: backstage
                  image: 000000000000.dkr.ecr.us-east-1.localhost.localstack.cloud:4566/idp/${{ parameters.name }}:${{ parameters.imageTag }}
                  imagePullPolicy: Always
                  ports:
                  - name: http
                    containerPort: 7007
                    protocol: TCP
                  env:
                  - name: NODE_ENV
                    value: production
                  - name: POSTGRES_HOST
                    value: postgres
                  - name: POSTGRES_PORT
                    value: "5432"
                  - name: POSTGRES_USER
                    value: backstage
                  - name: POSTGRES_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: backstage-secrets
                        key: postgres-password
                  resources:
                    requests:
                      memory: 512Mi
                      cpu: 250m
                    limits:
                      memory: 2Gi
                      cpu: 1

    - id: register-component
      name: Register Component in Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ parameters.repoUrl }}
        catalogInfoPath: '/catalog-info.yaml'
        optional: true

  output:
    links:
      - title: View Build Workflow
        url: http://localhost:4000/workflows/argo-workflows/${{ steps['trigger-build-workflow'].output.workflowName }}
      - title: Built Image in ECR
        url: http://localhost:4566/
      - title: ArgoCD Deployment
        url: http://localhost:8080/applications/backstage-platform
      - title: Backstage Application
        url: http://localhost:3000