apiVersion: v1
kind: Namespace
metadata:
  name: argo-workflows
  labels:
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/part-of: idp-platform

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-workflows-server
  namespace: argo-workflows

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-workflows-workflow-controller
  namespace: argo-workflows

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-workflows-server
rules:
- apiGroups: [""]
  resources: ["configmaps", "events"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["pods", "pods/exec", "pods/log"]
  verbs: ["get", "list", "watch", "delete"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
- apiGroups: ["argoproj.io"]
  resources: ["workflows", "workflowtemplates", "cronworkflows", "clusterworkflowtemplates"]
  verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-workflows-workflow-controller
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec"]
  verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["argoproj.io"]
  resources: ["workflows", "workflowtemplates", "cronworkflows", "clusterworkflowtemplates"]
  verbs: ["get", "list", "watch", "update", "patch", "delete", "create"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["create", "get", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-workflows-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-workflows-server
subjects:
- kind: ServiceAccount
  name: argo-workflows-server
  namespace: argo-workflows

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-workflows-workflow-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-workflows-workflow-controller
subjects:
- kind: ServiceAccount
  name: argo-workflows-workflow-controller
  namespace: argo-workflows

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
  namespace: argo-workflows
data:
  config: |
    # Base configuration for Argo Workflows controller
    containerRuntimeExecutor: docker
    artifactRepository:
      archiveLogs: true
    persistence:
      archive: true
      postgresql:
        host: localhost
        port: 5432
        database: argo
        tableName: argo_workflows
        userNameSecret:
          name: argo-postgres-config
          key: username
        passwordSecret:
          name: argo-postgres-config
          key: password
    workflowDefaults:
      spec:
        ttlStrategy:
          secondsAfterCompletion: 300
          secondsAfterSuccess: 300
          secondsAfterFailure: 300
    links:
      - name: "Workflow Link"
        scope: "workflow"
        url: "http://localhost:4000/workflows/${metadata.namespace}/${metadata.name}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-workflows-workflow-controller
  namespace: argo-workflows
  labels:
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/part-of: argo-workflows
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-workflows-workflow-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-workflows-workflow-controller
    spec:
      serviceAccountName: argo-workflows-workflow-controller
      containers:
      - name: workflow-controller
        image: quay.io/argoproj/workflow-controller:v3.5.2
        command:
        - workflow-controller
        args:
        - --configmap
        - workflow-controller-configmap
        - --executor-image
        - quay.io/argoproj/argoexec:v3.5.2
        - --loglevel
        - info
        - --gloglevel
        - "6"
        env:
        - name: LEADER_ELECTION_IDENTITY
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        livenessProbe:
          httpGet:
            path: /healthz
            port: 6060
          failureThreshold: 3
          initialDelaySeconds: 90
          periodSeconds: 60
          timeoutSeconds: 30
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 6060
          name: healthz
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-workflows-server
  namespace: argo-workflows
  labels:
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/part-of: argo-workflows
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-workflows-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-workflows-server
    spec:
      serviceAccountName: argo-workflows-server
      containers:
      - name: argo-server
        image: quay.io/argoproj/argocli:v3.5.2
        command:
        - argo
        args:
        - server
        - --auth-mode=server
        - --secure=false
        - --loglevel
        - info
        - --gloglevel
        - "6"
        env:
        - name: IN_CLUSTER
          value: "true"
        - name: ARGO_NAMESPACE
          value: argo-workflows
        - name: BASE_HREF
          value: /
        ports:
        - containerPort: 2746
          name: web
        readinessProbe:
          httpGet:
            path: /
            port: 2746
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 20
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      volumes:
      - emptyDir: {}
        name: tmp

---
apiVersion: v1
kind: Service
metadata:
  name: argo-workflows-server
  namespace: argo-workflows
  labels:
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/part-of: argo-workflows
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 2746
    protocol: TCP
    targetPort: 2746
  selector:
    app.kubernetes.io/name: argo-workflows-server

---
# Argo Workflows Custom Resource Definitions
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflows.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    singular: workflow
    shortNames:
    - wf
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: Status
      type: string
      description: Status of the workflow
      jsonPath: .status.phase
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflowtemplates.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: WorkflowTemplate
    listKind: WorkflowTemplateList
    plural: workflowtemplates
    singular: workflowtemplate
    shortNames:
    - wftmpl
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: cronworkflows.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: CronWorkflow
    listKind: CronWorkflowList
    plural: cronworkflows
    singular: cronworkflow
    shortNames:
    - cwf
    - cronwf
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterworkflowtemplates.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: ClusterWorkflowTemplate
    listKind: ClusterWorkflowTemplateList
    plural: clusterworkflowtemplates
    singular: clusterworkflowtemplate
    shortNames:
    - clusterwftmpl
    - cwftmpl
  scope: Cluster
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true