apiVersion: v1
kind: ConfigMap
metadata:
  name: webapp-controller-templates
  namespace: idp-system
data:
  deployment.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: {{.AppName}}
      namespace: {{.Namespace}}
      labels:
        app.kubernetes.io/name: {{.AppName}}
        app.kubernetes.io/managed-by: webapp-controller
        platform.idp/environment: {{.Environment}}
    spec:
      replicas: {{.Replicas}}
      selector:
        matchLabels:
          app.kubernetes.io/name: {{.AppName}}
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{.AppName}}
            platform.idp/environment: {{.Environment}}
          annotations:
            sidecar.istio.io/inject: "true"
        spec:
          containers:
          - name: app
            image: {{.Image.Repository}}:{{.Image.Tag}}
            imagePullPolicy: {{.Image.PullPolicy}}
            ports:
            - containerPort: {{.Port}}
              name: http
            {{- if .Monitoring.Metrics.Enabled}}
            - containerPort: {{.Monitoring.Metrics.Port}}
              name: metrics
            {{- end}}
            resources:
              requests:
                cpu: {{.Resources.Requests.CPU}}
                memory: {{.Resources.Requests.Memory}}
              limits:
                cpu: {{.Resources.Limits.CPU}}
                memory: {{.Resources.Limits.Memory}}
            livenessProbe:
              httpGet:
                path: /health
                port: http
              initialDelaySeconds: 30
              periodSeconds: 10
            readinessProbe:
              httpGet:
                path: /ready
                port: http
              initialDelaySeconds: 5
              periodSeconds: 5
  service.yaml: |
    apiVersion: v1
    kind: Service
    metadata:
      name: {{.AppName}}
      namespace: {{.Namespace}}
      labels:
        app.kubernetes.io/name: {{.AppName}}
        app.kubernetes.io/managed-by: webapp-controller
    spec:
      ports:
      - name: http
        port: 80
        targetPort: {{.Port}}
      {{- if .Monitoring.Metrics.Enabled}}
      - name: metrics
        port: {{.Monitoring.Metrics.Port}}
        targetPort: {{.Monitoring.Metrics.Port}}
      {{- end}}
      selector:
        app.kubernetes.io/name: {{.AppName}}
  virtualservice.yaml: |
    apiVersion: networking.istio.io/v1beta1
    kind: VirtualService
    metadata:
      name: {{.AppName}}
      namespace: {{.Namespace}}
      labels:
        app.kubernetes.io/name: {{.AppName}}
        app.kubernetes.io/managed-by: webapp-controller
    spec:
      hosts:
      - {{.Ingress.Hostname}}
      gateways:
      - istio-system/idp-gateway
      http:
      - match:
        - uri:
            prefix: /
        route:
        - destination:
            host: {{.AppName}}
            port:
              number: 80
  hpa.yaml: |
    apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      name: {{.AppName}}
      namespace: {{.Namespace}}
      labels:
        app.kubernetes.io/name: {{.AppName}}
        app.kubernetes.io/managed-by: webapp-controller
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: {{.AppName}}
      minReplicas: {{.Autoscaling.MinReplicas}}
      maxReplicas: {{.Autoscaling.MaxReplicas}}
      metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: {{.Autoscaling.TargetCPUUtilization}}