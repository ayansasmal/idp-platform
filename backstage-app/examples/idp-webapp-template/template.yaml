apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: idp-web-application
  title: IDP Web Application
  description: Create a new web application on the IDP platform using WebApplication CRD
  tags:
    - recommended
    - web
    - kubernetes
    - idp
    - platform
spec:
  owner: platform-team
  type: service
  parameters:
    - title: Application Details
      required:
        - name
        - description
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the application
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          ui:autofocus: true
          ui:help: 'Must be lowercase with hyphens'
        description:
          title: Description
          type: string
          description: Help others understand what this application does
        owner:
          title: Owner
          type: string
          description: Owner of the application
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
    - title: Application Configuration
      properties:
        environment:
          title: Environment
          type: string
          description: Target deployment environment
          default: development
          enum:
            - development
            - staging
            - production
          enumNames:
            - Development
            - Staging
            - Production
        replicas:
          title: Initial Replicas
          type: integer
          description: Number of application instances
          default: 2
          minimum: 1
          maximum: 10
        image:
          title: Container Image
          type: string
          description: Docker image for the application
          default: nginx:latest
        port:
          title: Application Port
          type: integer
          description: Port the application listens on
          default: 3000
          minimum: 1
          maximum: 65535
    - title: Optional Features
      properties:
        enableDatabase:
          title: Enable Database
          type: boolean
          description: Provision a PostgreSQL database
          default: false
        enableIngress:
          title: Enable Ingress
          type: boolean
          description: Create external endpoint for the application
          default: true
        hostname:
          title: Hostname
          type: string
          description: Custom hostname (optional)
          ui:help: 'Leave empty for auto-generated hostname'
    - title: Repository Information
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          environment: ${{ parameters.environment }}
          replicas: ${{ parameters.replicas }}
          image: ${{ parameters.image }}
          port: ${{ parameters.port }}
          enableDatabase: ${{ parameters.enableDatabase }}
          enableIngress: ${{ parameters.enableIngress }}
          hostname: ${{ parameters.hostname }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
      - title: View Application
        url: https://${{ parameters.hostname or parameters.name + '.' + parameters.environment + '.idp.local' }}