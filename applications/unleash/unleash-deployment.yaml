apiVersion: v1
kind: Namespace
metadata:
  name: unleash
  labels:
    istio-injection: enabled
    app: unleash
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: unleash-config
  namespace: unleash
data:
  DATABASE_HOST: unleash-postgres
  DATABASE_PORT: "5432"
  DATABASE_NAME: unleash
  DATABASE_USERNAME: unleash
  DATABASE_SSL: "false"
  NODE_ENV: production
  LOG_LEVEL: info
  UNLEASH_URL: http://unleash.unleash.svc.cluster.local:4242
  PORT: "4242"
  DATABASE_URL: postgresql://unleash:unleash@unleash-postgres:5432/unleash
---
apiVersion: v1
kind: Secret
metadata:
  name: unleash-secrets
  namespace: unleash
type: Opaque
data:
  DATABASE_PASSWORD: dW5sZWFzaA== # unleash (base64)
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: unleash-postgres-config
  namespace: unleash
data:
  POSTGRES_DB: unleash
  POSTGRES_USER: unleash
---
apiVersion: v1
kind: Secret
metadata:
  name: unleash-postgres-secrets
  namespace: unleash
type: Opaque
data:
  POSTGRES_PASSWORD: dW5sZWFzaA== # unleash (base64)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: unleash-postgres-pvc
  namespace: unleash
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unleash-postgres
  namespace: unleash
  labels:
    app: unleash-postgres
    component: database
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: unleash-postgres
  template:
    metadata:
      labels:
        app: unleash-postgres
        component: database
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: unleash-postgres-config
        - secretRef:
            name: unleash-postgres-secrets
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - unleash
            - -d
            - unleash
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - unleash
            - -d
            - unleash
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: unleash-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: unleash-postgres
  namespace: unleash
  labels:
    app: unleash-postgres
spec:
  selector:
    app: unleash-postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unleash
  namespace: unleash
  labels:
    app: unleash
    component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: unleash
  template:
    metadata:
      labels:
        app: unleash
        component: server
        version: latest
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command: ['sh', '-c', 'until pg_isready -h unleash-postgres -p 5432 -U unleash; do echo waiting for postgres; sleep 2; done;']
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: unleash-secrets
              key: DATABASE_PASSWORD
      containers:
      - name: unleash
        image: unleashorg/unleash-server:5.7.0
        ports:
        - containerPort: 4242
          name: http
        envFrom:
        - configMapRef:
            name: unleash-config
        - secretRef:
            name: unleash-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 4242
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 4242
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: unleash
  namespace: unleash
  labels:
    app: unleash
    service: unleash
spec:
  selector:
    app: unleash
  ports:
  - name: http
    port: 4242
    targetPort: 4242
  type: ClusterIP