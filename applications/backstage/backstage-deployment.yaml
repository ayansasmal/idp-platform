apiVersion: v1
kind: Namespace
metadata:
  name: backstage
  labels:
    istio-injection: enabled
    platform.idp/component: developer-portal
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backstage
  namespace: backstage
  labels:
    app.kubernetes.io/name: backstage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backstage-read
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - configmaps
  - limitranges
  - resourcequotas
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  - statefulsets
  - daemonsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  - destinationrules
  - gateways
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - platform.idp
  resources:
  - webapplications
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backstage-read
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: backstage-read
subjects:
- kind: ServiceAccount
  name: backstage
  namespace: backstage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: backstage
  labels:
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: idp-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: backstage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backstage
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: backstage
      containers:
      - name: backstage
        image: roadiehq/community-backstage-image:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 7007
          protocol: TCP
        env:
        - name: NODE_OPTIONS
          value: "--no-node-snapshot"
        - name: POSTGRES_HOST
          value: "postgres"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: "backstage"
        - name: POSTGRES_PASSWORD
          value: "backstage"
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: backstage-secrets
              key: github-token
              optional: true
        - name: ARGOCD_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: backstage-secrets
              key: argocd-token
              optional: true
        volumeMounts:
        - name: app-config
          mountPath: /app/app-config.yaml
          subPath: app-config.yaml
          readOnly: true
        - name: catalog-config
          mountPath: /app/catalog
          readOnly: true
        - name: templates-config
          mountPath: /app/templates
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: app-config
        configMap:
          name: backstage-app-config
      - name: catalog-config
        configMap:
          name: backstage-catalog-config
      - name: templates-config
        configMap:
          name: backstage-templates-config
---
apiVersion: v1
kind: Service
metadata:
  name: backstage
  namespace: backstage
  labels:
    app.kubernetes.io/name: backstage
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: backstage
---
apiVersion: v1
kind: Secret
metadata:
  name: backstage-secrets
  namespace: backstage
type: Opaque
stringData:
  github-token: "your-github-token-here"
  argocd-token: "your-argocd-token-here"