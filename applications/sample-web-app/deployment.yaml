apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-web-app
  namespace: development
  labels:
    app.kubernetes.io/name: sample-web-app
    app.kubernetes.io/managed-by: idp-platform
    platform.idp/environment: development
    platform.idp/type: web-application
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: sample-web-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sample-web-app
        platform.idp/environment: development
        platform.idp/type: web-application
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: sample-web-app
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        fsGroup: 101
      containers:
      - name: app
        image: nginx:1.21
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-cache
          mountPath: /var/cache/nginx
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-cache
        emptyDir: {}
      - name: var-run
        emptyDir: {}
      restartPolicy: Always